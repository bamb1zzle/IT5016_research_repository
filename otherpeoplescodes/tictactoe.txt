27/08/22 -

# tic_tac_toe.py
import tkinter as tk
from itertools import cycle
from tkinter import font
# ...

class TicTacToeGame:
    def __init__(self, players=DEFAULT_PLAYERS, board_size=BOARD_SIZE):
        self._players = cycle(players)
        self.board_size = board_size
        self.current_player = next(self._players)
        self.winner_combo = []
        self._current_moves = []
        self._has_winner = False
        self._winning_combos = []
        self._setup_board()

by realpython.com 

I'm not sure if inspired is the right word to put with this code but I definitely learned a lot from just understanding what classes is versus instances with the use of this code with my current understanding of tictactoe.
What I've gathered is that an object such as self._current_moves = [] is an instance of a class. And a class is the blueprint which you use to create objects. Instances are tied to a particular object. This allows objects with the same class to be independent of each other.